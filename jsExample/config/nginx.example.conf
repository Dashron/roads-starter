
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    server {
        listen 80;
        server_name www.{domain}.com {domain}.com;

        # redirects both www and non-www to https
        return 301 https://www.{domain}.com$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name {domain}.com;

        # redirects non-www to www
        return 301 $scheme://www.{domain}.com$request_uri;
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;

        server_name www.{domain}.com;

        ssl_certificate /etc/nginx/certificate.pem;
        ssl_certificate_key /etc/nginx/privatekey.pem;

        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-SSL on;
        proxy_set_header    X-Forwarded-Proto $scheme;

        location / {
            proxy_pass http://web;
        }

        location /static {
            root /web;
        }
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;

        server_name api.{domain}.com;

        ssl_certificate /etc/nginx/certificate.pem;
        ssl_certificate_key /etc/nginx/privatekey.pem;

        proxy_set_header    Host              $host;
        proxy_set_header    X-Real-IP         $remote_addr;
        proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header    X-Forwarded-SSL on;
        proxy_set_header    X-Forwarded-Proto $scheme;

        location / {
            proxy_pass http://api;
        }
    }
}
